Error ------------------------------------------------------------------------------------------------------ main.js:4:2

Cannot cast `x1` to empty because number [1] is incompatible with empty [2]. [incompatible-cast]

   main.js:4:2
    4| (x1: empty);
        ^^

References:
   get_prop_union.js:13:23
   13| declare export var x: typeof c.f;
                             ^^^^^^^^^^ [1]
   main.js:4:6
    4| (x1: empty);
            ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ main.js:4:2

Cannot cast `x1` to empty because string [1] is incompatible with empty [2]. [incompatible-cast]

   main.js:4:2
    4| (x1: empty);
        ^^

References:
   get_prop_union.js:13:23
   13| declare export var x: typeof c.f;
                             ^^^^^^^^^^ [1]
   main.js:4:6
    4| (x1: empty);
            ^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:32:2

Cannot cast `0` to `S4` because: [incompatible-cast]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with `R` [3].

   main.js:32:2
   32| (0: S4); // error number ~> string
        ^ [1]

References:
   recursive_types.js:10:17
   10| export type S = string | R; // okay
                       ^^^^^^ [2]
   recursive_types.js:10:26
   10| export type S = string | R; // okay
                                ^ [3]


Error ----------------------------------------------------------------------------------------------------- main.js:33:2

Cannot cast `0` to `R4` because number [1] is incompatible with `R` [2]. [incompatible-cast]

   main.js:33:2
   33| (0: R4); // error number ~> R (obj)
        ^ [1]

References:
   main.js:33:5
   33| (0: R4); // error number ~> R (obj)
           ^^ [2]


Error ------------------------------------------------------------------------------------------ recursive_module.js:1:9

Invalid trivially recursive definition of `p`.  [recursive-definition]

   1| import {p} from './recursive_module';
              ^


Error ---------------------------------------------------------------------------------- recursive_module_cycle_A.js:1:7

Invalid trivially recursive definition of `b`.  [recursive-definition]

   1| const b = require('./recursive_module_cycle_B');
            ^


Error ---------------------------------------------------------------------------------- recursive_module_cycle_B.js:1:7

Invalid trivially recursive definition of `a`.  [recursive-definition]

   1| const a = require('./recursive_module_cycle_A');
            ^


Error ------------------------------------------------------------------------------------------ recursive_types.js:1:14

Invalid type annotation for `x`. It contains a reference [1] to the binding being declared. [recursive-definition]

   recursive_types.js:1:14
   1| export const x: x = 0; // error recursive
                   ^

References:
   recursive_types.js:1:17
   1| export const x: x = 0; // error recursive
                      ^ [1]


Error ------------------------------------------------------------------------------------------ recursive_types.js:1:17

Invalid trivially recursive definition of `x`.  [recursive-definition]

   1| export const x: x = 0; // error recursive
                      ^


Error ------------------------------------------------------------------------------------------ recursive_types.js:3:14

Invalid type annotation for `y`. It contains a reference [1] to the binding being declared. [recursive-definition]

   recursive_types.js:3:14
   3| export const y: typeof y.f = 0; // error recursive
                   ^

References:
   recursive_types.js:3:24
   3| export const y: typeof y.f = 0; // error recursive
                             ^ [1]


Error ------------------------------------------------------------------------------------------ recursive_types.js:3:26

Invalid trivially recursive definition of property `f`.  [recursive-definition]

   3| export const y: typeof y.f = 0; // error recursive
                               ^


Error ------------------------------------------------------------------------------------------ recursive_types.js:5:14

Invalid type annotation for `z`. It contains a reference [1] to the binding being declared. [recursive-definition]

   recursive_types.js:5:14
   5| export const z: typeof z = 1; // error recursive
                   ^

References:
   recursive_types.js:5:24
   5| export const z: typeof z = 1; // error recursive
                             ^ [1]



Found 12 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
